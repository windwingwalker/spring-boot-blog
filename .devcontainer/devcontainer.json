// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.209.6/containers/docker-existing-docker-compose
// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
	"name": "Spring Boot Blog Demo",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../docker-compose.yml",
		"docker-compose.yml"
	],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "web",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"JAVA_HOME": "/usr/local/openjdk-11/bin/java",
		"maven.executable.path": "/usr/share/maven/bin/mvn"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"vscjava.vscode-java-pack",
		"gabrielbb.vscode-lombok",
		"ms-azuretools.vscode-docker"
	]

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}

// 	// Sets the run context to one level up instead of the .devcontainer folder.
// 	//"context": "..",

// 	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
// 	//"dockerFile": "../Dockerfile",
// 	"dockerComposeFile": "docker-compose.yml",
//   	"service": "web",
// 	"workspaceFolder": "/home/app",
// 	"shutdownAction": "stopCompose",


// 	//"mounts": ["source=maven-repo,target=/root/.m2,type=volume"]

// 	// Use 'forwardPorts' to make a list of ports inside the container available locally.
// 	// "forwardPorts": [],

// 	// Uncomment the next line to run commands after the container is created - for example installing curl.
// 	// "postCreateCommand": "apt-get update && apt-get install -y curl",

// 	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
// 	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

// 	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
// 	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

// 	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
// 	// "remoteUser": "vscode"
// }

